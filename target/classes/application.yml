server:
  port: 8080
---

spring:
  profiles: default
  jpa:
    database-platform: org.hibernate.dialect.SQLServer2012Dialect 
    generate-ddl: true #false  
    properties:
        temp: 
            use_jdbc_metadata_defaults: false
        hibernate: # Sql 로그 설정                
            show_sql: true
            format_sql: true
            # use_sql_comments: true
            use_nationalized_character_data: true        
  datasource:
    # jndi-name: jdbc/sqlserver/skupv
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url: jdbc:sqlserver://database-1.ctxnhbpzdwqx.ap-northeast-2.rds.amazonaws.com:1433;DatabaseName=eco
    username: admin
    password: "!skec1004"  
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: complain
          destination: airbnb
          contentType: application/json
        event-out:
          destination: airbnb
          contentType: application/json
prop:
  room:
    url: http://localhost:8088          

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
server:
  port: 8086
---

spring:
  profiles: docker
  jpa:
    database-platform: org.hibernate.dialect.SQLServer2012Dialect 
    generate-ddl: true #false  
    properties:
        temp: 
            use_jdbc_metadata_defaults: false
        hibernate: # Sql 로그 설정                
            show_sql: true
            format_sql: true
            # use_sql_comments: true
            use_nationalized_character_data: true   
  datasource:
    # jndi-name: jdbc/sqlserver/skupv
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url: jdbc:sqlserver://database-1.ctxnhbpzdwqx.ap-northeast-2.rds.amazonaws.com:1433;DatabaseName=eco
    username: admin
    password: "!skec1004"
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: complain
          destination: airbnb
          contentType: application/json
        event-out:
          destination: airbnb
          contentType: application/json
prop:
  room:
    url: http://gateway:8080          
